## Import sketools -------------------------------------------------------------
library(devtools)
load_all()

## test ------------------------------------------------------------------------
## définir ma palette et mon jeu de donnée -------------------------------------

p_skezi = c('#A3A8D5','#22577A', '#E4611D','#38A3A5','#F6A436', '#57CC99','#80B7A3',

            '#80ED99', '#C7F9CC','#477F8F','#8BD7D2','#6DB9A2','#89D7A0','#B6F0B9',

            '#A9BEC6','#CEE9E8', '#CEE6D1','#E1EFDC','#FBD29A','#F1B08E','#D1D3EA')


FilePath = "C:/Users/Akram Hecini/Desktop/R/docker_rapport/rapport_v3/questionnaire_skethis.xlsx"

df_spoon = readxl::read_excel(FilePath,sheet = 1)


FilePath = "C:/Users/Akram Hecini/Desktop/R/docker_rapport/rapport_v3/BDV_skethis.xlsx"

df_bbl = readxl::read_excel(FilePath,sheet = 1) %>%
  set_names(c("Variable...Field.name", "Form.name","Field.type",
              "Field.input.type", "Field.label","Required.field",
              "Conditions",  "Choices",  "Min.value", "Max.value"))



## faire des tests -------------------------------------------------------------
## Recodage des données : ------------------------------------------------------

?data_recoding

df = sketools::data_recoding(df = df_spoon,df_bbl =  df_bbl)

## organize_multi_responses ----------------------------------------------------

?organize_multi_responses

df_multi_response <- data.frame(
  var1 = c("A, B", "B, C", "A, C"),
  var2 = c("X, B", "C, B", "C, A")
)

organize_multi_responses(df_multi_response, c("var1", "var2"))

## Multibarmaker ----------------------------------------------------
?multibar_maker

df_multi_response <- data.frame(
  var1 = c("A, B", "B, C", "A, C"),
  var2 = c("X, Y", "Y, Z", "X, Z")
)

multibar_maker(df_multi_response, c("var1", "var2"), p_skezi = p_skezi)


## recodage --------------------------------------------------------------------

?data_recoding

df_spoon <- sketools::data_recoding(df_spoon,df_bbl, sep = ",")

## décision automatique --------------------------------------------------------

?decision_maker2

decision_maker2(df = df_spoon, df_bbl = df_bbl, var = "diag_maladie")

## table d'effectif/pourcentage ------------------------------------------------

?data_engine

data_engine(df = df,
            vars = c("diag_maladie","pro_sante"))

## table desctiptive (numeric) à revoir ----------------------------------------

sketools::numerical_table_summary(df_spoon, "diag_maladie") # à revoir

## un barplot ------------------------------------------------------------------

?barplot_maker

sketools::barplot_maker(df_spoon, "diag_maladie",
                        Pourcentage = F,
                        title = "mon test",
                        flip = F
                        )
## un hist ---------------------------------------------------------------------
?histogramme_maker

sketools::histogramme_maker(df_spoon, "pro_sante")

## un piechart -----------------------------------------------------------------

?piechart_maker

sketools::piechart_maker(df = df_spoon,var = "diag_maladie")

## un scatter plot -------------------------------------------------------------

?scatter_plot_maker

sketools::scatter_plot_maker(df_spoon,"pro_sante") # à revoir


# pyramide usage: --------------------------------------------------------------

df <- data.frame(age = c(1995, 1935, 1945, 1955, 1965, 1975,1975),

                 inf_sexe = c("Male", "Male", "Male", "Female", "Male","Male", "Female"))

sketools::pyramid_age_maker(df, "age")

?pyramid_age_maker

## upset plot ------------------------------------------------------------------

df_upset <- data.frame(id = 1:5, sets = c("A, B", "B, C", "A, C", "A, B, C", "B, C"))

upstplot_maker(df = df_upset, vars = "sets", sep = ", ")

?upstplot_maker

##diag de ven ------------------------------------------------------------------

?diag_venn_maker

df_venn <- data.frame(id = 1:5, categories = c("A | B", "B | C", "A | C", "A | B | C", "B | C"))

diag_venn_maker(df_venn, "categories")

## multi-bar maker

survey_table(df,df_bbl)
