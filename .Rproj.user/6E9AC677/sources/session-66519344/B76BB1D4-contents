library(plumber)
library(dplyr)
library(gdata)
library(tidyr)
library(stringr)
library(ggplot2)
library(kableExtra)
library(stringi)
library(ggvenn)
library(pander)
library(magrittr)
library(flextable)
library(readxl)
library(mime)
library(writexl)
library(gtsummary)
library(ggplot2)
library(magrittr)
library(dplyr)
library(gt)
library(vtable)
library(tidyverse)
library(wordcloud)
library(wordcloud2)
library(tm)
library(SnowballC)
library(RColorBrewer)
library(sentimentr)
library(ComplexUpset)
library(rmarkdown)
library(htmlwidgets) 
library(wordcloud2)
library(psych)
library(hot.deck)
library(officedown)
library(dplyr)
library(tidyr)
library(ggwordcloud)
library(stringr)
library(ggplot2)
library(kableExtra)
library(stringi)
library(ggvenn)
library(pander)
library(magrittr)
library(flextable)
library(officer)
library(rvg)
source("Fonctions.R")

df <- read.csv("c://Users/Akram Hecini/Desktop/R/a/fichier1.csv", sep = ";", header = TRUE)
df <- df[,colSums(is.na(df))<nrow(df)]

df_bbl <- read.csv("c://Users/Akram Hecini/Desktop/R/a/fichier2.csv", sep = ";", header = TRUE)
df_bbl[df_bbl == ""] <- NA
df_bbl = df_bbl %>%
  set_names(c("Variable...Field.name", "Form.name","Field.type",
              "Field.input.type", "Field.label","Required.field",
              "Conditions",  "Choices",  "Min.value", "Max.value"))

df_bbl = df_bbl[df_bbl$Variable...Field.name %in% names(df),]

df_bbl = df_bbl %>% 
  select(c("Variable...Field.name", "Form.name","Field.type",
           "Field.input.type", "Field.label","Required.field",
           "Conditions",  "Choices",  "Min.value", "Max.value"))

df <- data_recoding(df, df_bbl, sep = ",")


team1 = df
team2 = df_bbl



output_path <- paste0(getwd(), "/rapport_d.docx")

pandoc_path <- "C:/Users/Akram Hecini/AppData/Local/pandoc/pandoc.exe"

rmarkdown::pandoc_version()

Sys.setenv(RSTUDIO_PANDOC = pandoc_path)

rmarkdown::render("rapport_.RMD",
                  output_file = output_path,
                  output_format = word_document(
                    reference_docx = "tmplt.docx", 
                    toc = TRUE,
                  ),
                  params = list(team1 = team1, team2 = team2))






rmarkdown::render("pandoc_test.RMD",
                  output_format = word_document(
                    pandoc = pandoc_path)
                  )


rmarkdown::render("pandoc_test.RMD", 
                  output_file = "output_.docx", 
                  output_format = "word_document",
                  params = list(your_params))












